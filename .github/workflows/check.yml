name: Check

on:
  # push:
  #   branches: [ "devnet" ]
  pull_request:
    branches: [ "devnet" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
 
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: wasm32-unknown-unknown
        components: rustfmt clippy rust-src
    - name: Install system deps
      run: sudo apt-get install protobuf-compiler
    - name: Build
      run: cargo build --locked
    - name: Run tests
      run: cargo test --locked
    - name: Check format
      run: cargo fmt -- --check
    - name: Clippy checks
      run: cargo clippy -- -D warnings

      
  check-commit-message:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate Commit Messages
        run: |
          PR_BRANCH=$(jq -r ".pull_request.head.ref" "$GITHUB_EVENT_PATH")
          PR_MESSAGES=$(git log --format=%s origin/main..HEAD)

          # Check if each commit message matches the required format
          for MESSAGE in $PR_MESSAGES; do
            if ! echo "$MESSAGE" | grep -qE '^(Added|Changed|Deprecated|Removed|Fixed|Security): .+$'; then
              echo "Commit message '$MESSAGE' does not match the required format."
              exit 1
            fi
          done

      - name: Update Changelog
        if: success()
        run: |
          # Extract version and date from previous changelog entry
          PREVIOUS_VERSION=$(grep -oP '(?<=## \[)[^\]]+' Changelog.md | head -n 1)
          DATE=$(date +'%Y-%m-%d')

          # Generate changelog entry for the current pull request
          CHANGELOG_ENTRY="## [${PREVIOUS_VERSION}] - ${DATE}
          $(git log --format='- %s' origin/main..HEAD | sed 's/^\([A-Z][a-zA-Z]*\): /\n### \1\n- /g' | sed ':a;N;$!ba;s/\n\n/\n/g')"

          # Update changelog file
          sed -i "/## \[${PREVIOUS_VERSION}\]/a ${CHANGELOG_ENTRY}" Changelog.md

          # Commit and push changelog update
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add Changelog.md
          git commit -m "Update Changelog for ${PREVIOUS_VERSION} with changes from pull request #$PR_NUMBER"
          git push origin $PR_BRANCH
